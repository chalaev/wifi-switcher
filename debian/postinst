#!/bin/sh -e
. /usr/share/debconf/confmodule
db_version 2.0

if ! getent group netdev  > /dev/null 2>&1 ; then
    groupadd netdev || echo "wifi-switcher error: could not add netdev group"
fi

case "$1" in
    "configure")
	db_beginblock
	# setting wireless interface name:
	allInterfaces=$(ip link show | awk -F: '/^[0-9]+:/ { if ($2 !~ / *lo/)  {gsub(" ","",$2); print $2 }}' | sort -r | awk '{printf("%s ",$0)}')
	choices=""; for i in $allInterfaces; do choices="$choices, $i"; done
	db_subst wifi-switcher/wifiInterface allInterfaces $choices
	db_get wifi-switcher/wifiInterface
	if [ -z "$RET" ]; then # unset or empty string
	    db_subst wifi-switcher/wifiInterface defaultWifiInterface $(echo "$allInterfaces" | awk '{print $1}')
	else
	    db_set wifi-switcher/wifiInterface $(echo $RET | awk '{print $1}')
	    db_get wifi-switcher/wifiInterface
	    db_subst wifi-switcher/wifiInterface defaultWifiInterface $RET
	fi
	db_input medium wifi-switcher/wifiInterface || true

	db_get wifi-switcher/essid
	if [ -z "$RET" ]; then
	    db_set wifi-switcher/essid `hostname`
	fi
	db_input medium wifi-switcher/essid || true

	db_get wifi-switcher/nameservers
	if [ -z "$RET" ]; then
	    nameServerList=$(grep nameserver /etc/resolv.conf | awk '{print $2}')
	    db_set wifi-switcher/nameservers $(echo "$nameServerList" | sed "s/,$//" | sort -u)
	fi
	db_input medium wifi-switcher/nameservers || true

	db_get wifi-switcher/wifiPassphrase
	if [ -z "$RET" ]; then
	    db_set wifi-switcher/wifiPassphrase `apg -MNcl -a1 -n1`
	fi
	db_input medium wifi-switcher/wifiPassphrase || true

	db_get wifi-switcher/ftpPassphrase
	if [ -z "$RET" ]; then
	    db_set wifi-switcher/ftpPassphrase `apg -MNcl -a1 -n1`
	fi
	db_input medium wifi-switcher/ftpPassphrase || true
 	db_input medium wifi-switcher/ftpVirtualUser || true
 	db_input medium wifi-switcher/ftpLocalUser || true
	db_endblock
	db_input medium wifi-switcher/subnet || true
	#############
	db_go
	#############
	db_get wifi-switcher/wifiInterface
	export wifiInterface="$RET"
	db_get wifi-switcher/essid
	essid="$RET"
	db_get wifi-switcher/nameservers
	nameservers="$RET"
	db_get wifi-switcher/wifiPassphrase
	wifiPassphrase="$RET"
	db_get wifi-switcher/ftpVirtualUser
	ftpVirtualUser="$RET"
	db_get wifi-switcher/ftpLocalUser
	ftpLocalUser="$RET"
	db_get wifi-switcher/ftpPassphrase
	ftpPassphrase="$RET"

	# the following queries control input validity:
	db_get wifi-switcher/subnet
	subnet="$RET"
	until $(perl -e "{exit 1 unless \"$subnet\" =~ m/^\d{1,3}\.\d{1,3}\.\d{1,3}\.0\$/; }")
	do
	    echo "Invalid subnet $subnet entered, please reenter."
	    db_input critical wifi-switcher/subnet || true
	    db_go
	    db_get wifi-switcher/subnet
	    subnet="$RET"
	done
	subnetPart=$(echo $subnet |sed "s/\([0-9]\+\)\\.\([0-9]\+\)\\.\([0-9]\+\)\\..*/\1.\2.\3./")

	echo -e "$ftpVirtualUser\n$ftpPassphrase" | db_load -T -t hash /etc/vsftpd-wifi.db
	if getent passwd $ftpLocalUser > /dev/null 2>&1 ; then
    	    ftpDir=$(getent passwd $ftpLocalUser | awk -F: '{print $6}')
	else
	    ftpDir="/srv/ftp"
	    adduser --home ${ftpDir} --gecos "ftp user" --shell /bin/false --quiet --disabled-password $ftpLocalUser
	    install -d -o${ftpLocalUser} $ftpDir
	    chown $ftpLocalUser $ftpDir
	fi
	    # chmod 555 $ftpDir
# 	[ -e $ftpDir/test.txt ] || \
# echo "wifi-switcher: writing test file to $ftpDir" && \
# echo "test ftp file" > $ftpDir/test.txt

	cat > /etc/sudoers.d/wifi-switcher <<EOF
# This file is created and will be overwritten by the installation (postinst) script
%netdev ALL=NOPASSWD:/sbin/iwlist ${wifiInterface} scan
%netdev ALL=NOPASSWD:/sbin/ifdown ${wifiInterface}
%netdev ALL=NOPASSWD:/sbin/ifup ${wifiInterface}=${essid}
%netdev ALL=NOPASSWD:/usr/sbin/service wifi-switcher restart
%netdev ALL=NOPASSWD:/usr/sbin/service wifi-switcher start
%netdev ALL=NOPASSWD:/usr/sbin/service wifi-switcher stop
%netdev ALL=NOPASSWD:/usr/sbin/service hostapd start
%netdev ALL=NOPASSWD:/usr/sbin/service hostapd stop
%netdev ALL=NOPASSWD:/usr/sbin/service isc-dhcp-server start
%netdev ALL=NOPASSWD:/usr/sbin/service isc-dhcp-server stop
%netdev ALL=NOPASSWD:/usr/sbin/service vsftpd start
%netdev ALL=NOPASSWD:/usr/sbin/service vsftpd stop
EOF
	cat > /etc/network/interfaces.d/wifi-switcher <<EOF
# This file is created and will be overwritten by the installation (postinst) script
# wifi-switcher configuration in the hotspot mode
iface ${essid} inet static
wireless-essid ${essid}
# Sometimes (when there are too many wifi networks) you have to choose optimal (less occupied) wireless-channel:
# wireless-channel 10
wireless-mode ad-hoc
address ${subnetPart}1
netmask 255.255.255.0
# gateway ${subnetPart}1
# dns-nameservers
EOF
	cat > /etc/dhcp/wifi-switcher.conf <<EOF
# This file is created and will be overwritten by the installation (postinst) script
# wifi-switcher configuration in the hotspot mode
#ddns-update-style ad-hoc;
#option domain-name "domain.com";
option domain-name-servers "$nameservers";
default-lease-time 600;
max-lease-time 7200;
authorative;
subnet ${subnetPart}0 netmask 255.255.255.0{
range ${subnetPart}10 ${subnetPart}20;
option routers ${subnetPart}1;
option broadcast-address ${subnetPart}255;
}
EOF
	cat > /etc/hostapd/wifi-switcher.conf <<EOF
# This file is created and will be overwritten by the installation (postinst) script
# wifi-switcher configuration in the hotspot mode
interface=$wifiInterface
#driver=nl80211
country_code=US
ssid=hostname
hw_mode=g
channel=6
wpa=2
wpa_passphrase=$wifiPassphrase
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
auth_algs=1
macaddr_acl=0
EOF
	cat > /etc/default/wifi-switcher <<EOF
# Do not edit this file manually, use
# dpkg-reconfigure wifi-switcher
wifi_interface="$wifiInterface"
EOF
	cat > /etc/default/isc-dhcp-server.wifi <<EOF
DHCPDv4_CONF=/etc/dhcp/wifi-switcher.conf
#DHCPDv6_CONF=/etc/dhcp/dhcpd.conf
DHCPD_CONF=/etc/dhcp/wifi-switcher.conf
INTERFACES="$wifiInterface"
EOF
	chmod g=rx /etc/wpa_supplicant/ws-action.sh
	chmod o=rx /etc/init.d/wifi-switcher
	chmod o=rx /usr/bin/wifi-switcher
	[ -e /etc/wpa_supplicant/wifi-switcher.conf ] || touch /etc/wpa_supplicant/wifi-switcher.conf
	chgrp netdev  /etc/wpa_supplicant/wifi-switcher.conf /etc/wpa_supplicant/ws-action.sh
	chmod g=rw /etc/wpa_supplicant/wifi-switcher.conf
	chmod 0440 /etc/sudoers.d/wifi-switcher
	chmod 600 /etc/vsftpd-wifi.db /etc/vsftpd.conf.wifi /etc/hostapd/wifi-switcher.conf
	chmod o=rx /usr/share/wifi-switcher/hotspot.sh

 	# echo "Expecting wifi-switcher to be the monopolist in using $i daemon, I disable its autostart and divert its configuration"
	for i in $(service --status-all | grep "hostapd\|vsftpd\|x11-common" | awk '{print $NF}') ; do
	    update-rc.d -f $i remove
	done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
	echo "wifi-switcher: postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# The following two diversions are non-standard:
# a) /etc/default/isc-dhcp-server is not reported to belong to any package so standard diversion approach does not work for it;
# b) /etc/network/interfaces is diverted or not, based on its contents.
if [ "$1" = "configure" ] || [ "$1" = "abort-remove" ]; then
    dpkg-divert --package wifi-switcher --rename --divert /etc/default/isc-dhcp-server.orig --add /etc/default/isc-dhcp-server
    displace_link_symlink /etc/default/isc-dhcp-server /etc/default/isc-dhcp-server.wifi /etc/default/isc-dhcp-server.orig
# now we comment any wifi-interface instances in /etc/network/interfaces
    if grep $wifiInterface /etc/network/interfaces > /dev/null 2>&1 ; then
	perl -e '$data = `grep -v ^# /etc/network/interfaces`;
@values = split("iface", $data); print $values[0]; shift @values;
foreach my $val (@values) {
  if ($val =~ ("^[ \t]*" . "$ENV{wifiInterface}" . "[ \t]+")) {
    $val =~ s/\n\n/\n/g ;
    $val =~ s/\n/\n# /g ;
    print "# iface $val" ; }
  else {
    print "\niface$val"; }}
print "\n";' > /etc/network/interfaces.wifi
    dpkg-divert --package wifi-switcher --rename --divert /etc/network/interfaces.orig --add /etc/network/interfaces
    displace_link_symlink /etc/network/interfaces /etc/network/interfaces.wifi /etc/network/interfaces.orig
    fi
fi

exit 0
